{
  "swagger" : "2.0",
  "info" : {
    "description" : "# Overview\nThe Rotman Interactive Trader (RIT) allows users to query for market data and submit trading instructions through a REST API, as well as through a Microsoft Excel VBA API. This webpage aims to provide detailed information on the REST API. If you are looking for detailed information about Excel VBA API, please click **[here](https://306w.s3.amazonaws.com/rit_cases/Help/Student/RIT%20-%20User%20Guide%20-%20VBA%20API%20Documentation.pdf)**\n\nThis is a simple REST API for interacting with the Rotman Interactive Trader (RIT) Client. RIT Client must be running to access this API. Responses are always [JSON objects](https://www.w3schools.com/js/js_json_objects.asp). Successful requests always return with HTTP code `200`. Unsuccessful responses have HTTP error codes between `400` and `500`. Most programming languages have ways to interact with this kind of API. Some resources:\n\n- MATLAB https://www.mathworks.com/help/mps/restful-api-and-json.html?requestedDomain=www.mathworks.com\n- C# https://docs.microsoft.com/en-us/aspnet/web-api/overview/advanced/calling-a-web-api-from-a-net-client\n- Python https://realpython.com/blog/python/api-integration-in-python/\n- Node https://www.npmjs.com/package/request \n- VBA https://stackoverflow.com/questions/19553476/how-to-make-rest-call-with-vba-in-excel along with https://stackoverflow.com/questions/19360440/how-to-parse-json-with-vba-without-external-libraries\n\n# Configuration\n\n![Status bar example.](http://rit.rotman.utoronto.ca/RIT%20API%20webpage/status.png)\n\nThe 'API Orders' icon indicates whether a user can submit an order via API. If it's turned on, it will display **green**. If it's turned off, it will be greyed out. This icon applies to both Excel VBA API and REST API.\n\nThe API icon indicates whether an API access is enabled. If there are any issues with starting the API, the icon will be **red** and clicking on it will reveal the associated error message. If the API is turned off, the icon will be greyed out. This icon applies to both Excel VBA API and REST API.\n\nA user can click on this `API` icon in order to access more detailed information and also configure the API settings.\n\n![Config dialog example.](http://rit.rotman.utoronto.ca/RIT%20API%20webpage/config.png)\n\nThe REST API by default runs on port `9999` but that can be modified here. The API key (initially autogenerated) can also be changed here. The API will not be accessible without an API key configured. Clicking through the documentation link here will initialize this page with the proper port and API key settings for that particular client instance and is the recommended way to start exploring this API.\n\n# Authentication\n\nThe API key can be found by clicking on the `API` icon in the status bar once logged in. This key must be included in every request to the RIT API, either through the `X-API-Key` header or through the `key` query parameter. Requests without a matching key will be rejected with HTTP code `401`.\n\n# Rate Limiting\n\nCertain endpoints are rate-limited (indicated in the endpoint description). When a request is rejected due to rate-limiting, the response will have an HTTP error code of `429`. In addition, the response will have a `Retry-After` header and `wait` body parameter which indicates the number of seconds to wait before attempting the request again. \n\nNote that in addition to the global rate limit on requests, securities may also have additional, more restrictive rate limits which apply to requests for those securities. The `Retry-After`/`wait` times in those cases correspond to the more restrictive rate limits. Requests for other securities with less restrictive rate limits may still be successful.\n\nGenerally, most of the default RIT cases will have a very 'loose' rate-limiting otherwise changed by instructors. Therefore, it is not expected that users will often experience this response from rate-limiting.\n\nThe Excel VBA API treats rate-limiting in a different way and instead queues any requests which exceed the rate limit (and executes them over time at the rate limit). If the Excel VBA API is used concurently with this REST API, endpoints which are rate-limited will reject requests if there are any queued requests. It is NOT advised to run both APIs simultaneously.\n\n# Additional Notes\n- Tickers are case-sensitive and should match what is displayed in the RIT Client.\n",
    "version" : "1.0.0",
    "title" : "Rotman Interactive Trader Client REST API"
  },
  "host" : "localhost:9999",
  "basePath" : "/v1",
  "schemes" : [ "http" ],
  "produces" : [ "application/json" ],
  "security" : [ {
    "APIKeyHeader" : [ ]
  }, {
    "APIKeyQueryParam" : [ ]
  } ],
  "paths" : {
    "/case" : {
      "get" : {
        "summary" : "Gets information about the current case.",
        "description" : "Gets information about the current case.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Name of the current case."
                },
                "period" : {
                  "type" : "integer",
                  "description" : "Current period."
                },
                "tick" : {
                  "type" : "integer",
                  "description" : "Current tick."
                },
                "ticks_per_period" : {
                  "type" : "integer",
                  "description" : "Ticks in each period."
                },
                "total_periods" : {
                  "type" : "integer",
                  "description" : "Total periods in the case."
                },
                "status" : {
                  "type" : "string",
                  "description" : "Current status of the case.",
                  "enum" : [ "ACTIVE", "PAUSED", "STOPPED" ]
                },
                "is_enforce_trading_limits" : {
                  "type" : "boolean",
                  "description" : "Whether trading limits are enforced, or if they can be breached at the cost of a fine."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/trader" : {
      "get" : {
        "summary" : "Gets information about the currently signed in trader.",
        "description" : "Gets information about the currently signed in trader.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "trader_id" : {
                  "type" : "string"
                },
                "first_name" : {
                  "type" : "string"
                },
                "last_name" : {
                  "type" : "string"
                },
                "nlv" : {
                  "type" : "number",
                  "description" : "Net liquid value."
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/limits" : {
      "get" : {
        "summary" : "Trading limits for the current case.",
        "description" : "Trading limits for the current case.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Label for the trading limit."
                  },
                  "gross" : {
                    "type" : "number",
                    "description" : "Trader's current gross risk level."
                  },
                  "net" : {
                    "type" : "number",
                    "description" : "Trader's current net risk level."
                  },
                  "gross_limit" : {
                    "type" : "number",
                    "description" : "Gross risk limit for the case. If exceeded, the trader will be fined."
                  },
                  "net_limit" : {
                    "type" : "number",
                    "description" : "Net risk limit for the case. If exceeded, the trader will be fined."
                  },
                  "gross_fine" : {
                    "type" : "number",
                    "description" : "Per risk unit fine for exceeding the gross risk limit."
                  },
                  "net_fine" : {
                    "type" : "number",
                    "description" : "Per risk unit fine for exceeding the net risk limit."
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/news" : {
      "get" : {
        "summary" : "Gets the most recent news.",
        "description" : "Gets the most recent news.",
        "parameters" : [ {
          "name" : "since",
          "in" : "query",
          "description" : "Retrieve only news items *after* a particular news id.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Result set limit, counting backwards from the most recent news item. Defaults to `20`.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "news_id" : {
                    "type" : "integer"
                  },
                  "period" : {
                    "type" : "integer"
                  },
                  "tick" : {
                    "type" : "integer"
                  },
                  "ticker" : {
                    "type" : "string"
                  },
                  "headline" : {
                    "type" : "string"
                  },
                  "body" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/assets" : {
      "get" : {
        "summary" : "Gets a list of available assets.",
        "description" : "Gets a list of available assets.",
        "parameters" : [ {
          "name" : "ticker",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "ticker" : {
                    "type" : "string"
                  },
                  "type" : {
                    "type" : "string",
                    "enum" : [ "CONTAINER", "PIPELINE", "SHIP", "REFINERY", "POWER_PLANT", "PRODUCER" ]
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "total_quantity" : {
                    "type" : "integer"
                  },
                  "available_quantity" : {
                    "type" : "integer"
                  },
                  "lease_price" : {
                    "type" : "number"
                  },
                  "convert_from" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/assets_convert_from"
                    }
                  },
                  "convert_to" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/assets_convert_from"
                    }
                  },
                  "containment" : {
                    "$ref" : "#/definitions/assets_convert_from"
                  },
                  "ticks_per_conversion" : {
                    "type" : "integer"
                  },
                  "ticks_per_lease" : {
                    "type" : "integer"
                  },
                  "is_available" : {
                    "type" : "boolean"
                  },
                  "start_period" : {
                    "type" : "integer"
                  },
                  "stop_period" : {
                    "type" : "integer"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/securities" : {
      "get" : {
        "summary" : "Gets a list of available securities and associated positions.",
        "description" : "Gets a list of available securities and associated positions.",
        "parameters" : [ {
          "name" : "ticker",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "ticker" : {
                    "type" : "string"
                  },
                  "type" : {
                    "type" : "string",
                    "enum" : [ "SPOT", "FUTURE", "INDEX", "OPTION", "STOCK", "CURRENCY", "BOND", "RATE", "FORWARD", "SWAP", "SWAP_BOM", "SPRE" ]
                  },
                  "size" : {
                    "type" : "integer"
                  },
                  "position" : {
                    "type" : "number"
                  },
                  "vwap" : {
                    "type" : "number"
                  },
                  "nlv" : {
                    "type" : "number"
                  },
                  "last" : {
                    "type" : "number"
                  },
                  "bid" : {
                    "type" : "number"
                  },
                  "bid_size" : {
                    "type" : "number"
                  },
                  "ask" : {
                    "type" : "number"
                  },
                  "ask_size" : {
                    "type" : "number"
                  },
                  "volume" : {
                    "type" : "number"
                  },
                  "unrealized" : {
                    "type" : "number"
                  },
                  "realized" : {
                    "type" : "number"
                  },
                  "currency" : {
                    "type" : "string"
                  },
                  "total_volume" : {
                    "type" : "number"
                  },
                  "limits" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/securities_limits"
                    }
                  },
                  "interest_rate" : {
                    "type" : "number"
                  },
                  "is_tradeable" : {
                    "type" : "boolean"
                  },
                  "is_shortable" : {
                    "type" : "boolean"
                  },
                  "start_period" : {
                    "type" : "integer"
                  },
                  "stop_period" : {
                    "type" : "integer"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/securities/book" : {
      "get" : {
        "summary" : "Gets the order book of a security.",
        "description" : "Gets the order book of a security.",
        "parameters" : [ {
          "name" : "ticker",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "bid" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Order"
                  }
                },
                "ask" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Order"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/securities/history" : {
      "get" : {
        "summary" : "Gets the OHLC history for a security.",
        "description" : "Gets the OHLC history for a security.",
        "parameters" : [ {
          "name" : "ticker",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "period",
          "in" : "query",
          "description" : "Period to retrieve data from. Defaults to the current period.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Result set limit, counting backwards from the most recent tick. Defaults to retrieving the entire period.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "example" : {
                  "tick" : 11,
                  "open" : 4.12,
                  "high" : 4.21,
                  "low" : 4.1,
                  "close" : 4.15
                },
                "properties" : {
                  "tick" : {
                    "type" : "integer"
                  },
                  "open" : {
                    "type" : "number"
                  },
                  "high" : {
                    "type" : "number"
                  },
                  "low" : {
                    "type" : "number"
                  },
                  "close" : {
                    "type" : "number"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/orders" : {
      "get" : {
        "summary" : "Gets a list of all orders.",
        "description" : "Gets a list of all orders.",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "The status of the orders to return. Defaults to `OPEN`.",
          "required" : false,
          "type" : "string",
          "enum" : [ "OPEN", "TRANSACTED", "CANCELLED" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Order"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Insert a new order.",
        "description" : "Insert a new order. Note that this endpoint is rate-limited. If the rate limit is exceeded, the response will return HTTP code `429` and will contain a `wait` field and a `Retry-After` header indicating the number of seconds to wait before trying again.",
        "parameters" : [ {
          "name" : "ticker",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "enum" : [ "MARKET", "LIMIT" ]
        }, {
          "name" : "quantity",
          "in" : "query",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "action",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "enum" : [ "BUY", "SELL" ]
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Required if `type` is `LIMIT`. Ignored otherwise.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "dry_run",
          "in" : "query",
          "description" : "Only available if `type` is `MARKET`. *Simulates* the order execution and returns the result as if the order was executed.",
          "required" : false,
          "type" : "number",
          "enum" : [ 0.0, 1.0 ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Wait-Until" : {
                "type" : "number",
                "description" : "Number of seconds to wait before attempting another order insertion against the same ticker (otherwise the rate limit will be exceeded)."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Order"
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          },
          "429" : {
            "description" : "Rate limit exceeded.",
            "headers" : {
              "Retry-After" : {
                "type" : "number",
                "description" : "Number of seconds to wait before retrying request."
              }
            },
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "RATE_LIMIT_EXCEEDED",
                "wait" : 0.215
              }
            }
          }
        }
      }
    },
    "/orders/{id}" : {
      "get" : {
        "summary" : "Gets the details of a specific order.",
        "description" : "Gets the details of a specific order.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the order.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Order"
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Cancel an open order.",
        "description" : "Cancel an open order.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the order.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SuccessResult"
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/tenders" : {
      "get" : {
        "summary" : "Gets a list of all active tenders.",
        "description" : "Gets a list of all active tenders.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "tender_id" : {
                    "type" : "integer"
                  },
                  "period" : {
                    "type" : "integer"
                  },
                  "tick" : {
                    "type" : "integer"
                  },
                  "expires" : {
                    "type" : "integer"
                  },
                  "caption" : {
                    "type" : "string"
                  },
                  "quantity" : {
                    "type" : "number"
                  },
                  "action" : {
                    "type" : "string",
                    "enum" : [ "BUY", "SELL" ]
                  },
                  "is_fixed_bid" : {
                    "type" : "boolean"
                  },
                  "price" : {
                    "type" : "number",
                    "description" : "Will be non-null if `is_fixed_bid` is `true`."
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/tenders/{id}" : {
      "post" : {
        "summary" : "Accept the tender.",
        "description" : "Accept the tender.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tender.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Required if the tender is not fixed-bid.",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SuccessResult"
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Decline the tender.",
        "description" : "Decline the tender.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tender.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SuccessResult"
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    },
    "/commands/cancel" : {
      "post" : {
        "summary" : "Bulk cancel open orders.",
        "description" : "Bulk cancel open orders. Exactly one query parameter must be specified. If multiple query parameters are specified, only the first available parameter in the order below will be processed. Returns a result object that specifies which orders were actually cancelled.",
        "parameters" : [ {
          "name" : "all",
          "in" : "query",
          "description" : "Set to `1` to cancel all open orders.",
          "required" : false,
          "type" : "number",
          "enum" : [ 0.0, 1.0 ]
        }, {
          "name" : "ticker",
          "in" : "query",
          "description" : "Cancel all open orders for a security.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ids",
          "in" : "query",
          "description" : "Cancel a set of orders referenced via a comma-separated list of order ids. For example, `12,13,91,1`.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "Query string to select orders for cancellation. For example, `Ticker='CL' AND Price>124.23 AND Volume<0` will cancel all open sell orders for CL priced above 124.23.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "cancelled_order_ids" : {
                  "type" : "array",
                  "example" : [ 12, 13, 91 ],
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized.",
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/definitions/Error"
              }, { } ],
              "example" : {
                "code" : "UNAUTHORIZED"
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "APIKeyHeader" : {
      "type" : "apiKey",
      "name" : "X-API-Key",
      "in" : "header"
    },
    "APIKeyQueryParam" : {
      "type" : "apiKey",
      "name" : "key",
      "in" : "query"
    }
  },
  "definitions" : {
    "Error" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "CaseStatus" : {
      "type" : "string",
      "enum" : [ "ACTIVE", "PAUSED", "STOPPED" ]
    },
    "OrderType" : {
      "type" : "string",
      "enum" : [ "MARKET", "LIMIT" ]
    },
    "SecurityType" : {
      "type" : "string",
      "enum" : [ "SPOT", "FUTURE", "INDEX", "OPTION", "STOCK", "CURRENCY", "BOND", "RATE", "FORWARD", "SWAP", "SWAP_BOM", "SPRE" ]
    },
    "AssetType" : {
      "type" : "string",
      "enum" : [ "CONTAINER", "PIPELINE", "SHIP", "REFINERY", "POWER_PLANT", "PRODUCER" ]
    },
    "OrderAction" : {
      "type" : "string",
      "enum" : [ "BUY", "SELL" ]
    },
    "OrderStatus" : {
      "type" : "string",
      "enum" : [ "OPEN", "TRANSACTED", "CANCELLED" ]
    },
    "Order" : {
      "type" : "object",
      "properties" : {
        "order_id" : {
          "type" : "integer",
          "example" : 1221
        },
        "period" : {
          "type" : "integer",
          "example" : 1
        },
        "tick" : {
          "type" : "integer",
          "example" : 10
        },
        "trader_id" : {
          "type" : "string",
          "example" : "trader49"
        },
        "ticker" : {
          "type" : "string",
          "example" : "CRZY",
          "description" : "Case sensitive."
        },
        "type" : {
          "type" : "string",
          "example" : "LIMIT",
          "enum" : [ "MARKET", "LIMIT" ]
        },
        "quantity" : {
          "type" : "number",
          "example" : 100.0
        },
        "action" : {
          "type" : "string",
          "enum" : [ "BUY", "SELL" ]
        },
        "price" : {
          "type" : "number",
          "example" : 14.21,
          "description" : "Will be `null` if `type` is `LIMIT`."
        },
        "quantity_filled" : {
          "type" : "number",
          "example" : 10.0,
          "description" : "Always less than or equal to `quantity`."
        },
        "vwap" : {
          "type" : "number",
          "example" : 14.21,
          "description" : "Volume-weighted average price for transacted quantity. `null` if `quantity_filled` is `0`."
        },
        "status" : {
          "type" : "string",
          "enum" : [ "OPEN", "TRANSACTED", "CANCELLED" ]
        }
      },
      "example" : {
        "trader_id" : "trader49",
        "period" : 1,
        "ticker" : "CRZY",
        "quantity" : 100.0,
        "price" : 14.21,
        "vwap" : 14.21,
        "action" : "BUY",
        "tick" : 10,
        "type" : "LIMIT",
        "order_id" : 1221,
        "quantity_filled" : 10.0,
        "status" : "OPEN"
      }
    },
    "SuccessResult" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean",
          "example" : true
        }
      },
      "description" : "Placeholder result to indicate an operation was successful.",
      "example" : {
        "success" : true
      }
    },
    "inline_response_200" : {
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the current case."
        },
        "period" : {
          "type" : "integer",
          "description" : "Current period."
        },
        "tick" : {
          "type" : "integer",
          "description" : "Current tick."
        },
        "ticks_per_period" : {
          "type" : "integer",
          "description" : "Ticks in each period."
        },
        "total_periods" : {
          "type" : "integer",
          "description" : "Total periods in the case."
        },
        "status" : {
          "type" : "string",
          "description" : "Current status of the case.",
          "enum" : [ "ACTIVE", "PAUSED", "STOPPED" ]
        },
        "is_enforce_trading_limits" : {
          "type" : "boolean",
          "description" : "Whether trading limits are enforced, or if they can be breached at the cost of a fine."
        }
      },
      "example" : {
        "period" : 0,
        "total_periods" : 5,
        "name" : "name",
        "ticks_per_period" : 1,
        "tick" : 6,
        "status" : "ACTIVE",
        "is_enforce_trading_limits" : true
      }
    },
    "inline_response_401" : {
      "properties" : {
        "Error" : {
          "$ref" : "#/definitions/Error"
        }
      },
      "example" : "{code=UNAUTHORIZED}"
    },
    "inline_response_200_1" : {
      "properties" : {
        "trader_id" : {
          "type" : "string"
        },
        "first_name" : {
          "type" : "string"
        },
        "last_name" : {
          "type" : "string"
        },
        "nlv" : {
          "type" : "number",
          "description" : "Net liquid value."
        }
      },
      "example" : {
        "trader_id" : "trader_id",
        "last_name" : "last_name",
        "nlv" : 0.80082819046101150206595775671303272247314453125,
        "first_name" : "first_name"
      }
    },
    "inline_response_200_2" : {
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Label for the trading limit."
        },
        "gross" : {
          "type" : "number",
          "description" : "Trader's current gross risk level."
        },
        "net" : {
          "type" : "number",
          "description" : "Trader's current net risk level."
        },
        "gross_limit" : {
          "type" : "number",
          "description" : "Gross risk limit for the case. If exceeded, the trader will be fined."
        },
        "net_limit" : {
          "type" : "number",
          "description" : "Net risk limit for the case. If exceeded, the trader will be fined."
        },
        "gross_fine" : {
          "type" : "number",
          "description" : "Per risk unit fine for exceeding the gross risk limit."
        },
        "net_fine" : {
          "type" : "number",
          "description" : "Per risk unit fine for exceeding the net risk limit."
        }
      }
    },
    "inline_response_200_3" : {
      "properties" : {
        "news_id" : {
          "type" : "integer"
        },
        "period" : {
          "type" : "integer"
        },
        "tick" : {
          "type" : "integer"
        },
        "ticker" : {
          "type" : "string"
        },
        "headline" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        }
      }
    },
    "assets_convert_from" : {
      "properties" : {
        "ticker" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_4" : {
      "properties" : {
        "ticker" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "CONTAINER", "PIPELINE", "SHIP", "REFINERY", "POWER_PLANT", "PRODUCER" ]
        },
        "description" : {
          "type" : "string"
        },
        "total_quantity" : {
          "type" : "integer"
        },
        "available_quantity" : {
          "type" : "integer"
        },
        "lease_price" : {
          "type" : "number"
        },
        "convert_from" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/assets_convert_from"
          }
        },
        "convert_to" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/assets_convert_from"
          }
        },
        "containment" : {
          "$ref" : "#/definitions/assets_convert_from"
        },
        "ticks_per_conversion" : {
          "type" : "integer"
        },
        "ticks_per_lease" : {
          "type" : "integer"
        },
        "is_available" : {
          "type" : "boolean"
        },
        "start_period" : {
          "type" : "integer"
        },
        "stop_period" : {
          "type" : "integer"
        }
      }
    },
    "securities_limits" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "units" : {
          "type" : "number"
        }
      }
    },
    "inline_response_200_5" : {
      "properties" : {
        "ticker" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "SPOT", "FUTURE", "INDEX", "OPTION", "STOCK", "CURRENCY", "BOND", "RATE", "FORWARD", "SWAP", "SWAP_BOM", "SPRE" ]
        },
        "size" : {
          "type" : "integer"
        },
        "position" : {
          "type" : "number"
        },
        "vwap" : {
          "type" : "number"
        },
        "nlv" : {
          "type" : "number"
        },
        "last" : {
          "type" : "number"
        },
        "bid" : {
          "type" : "number"
        },
        "bid_size" : {
          "type" : "number"
        },
        "ask" : {
          "type" : "number"
        },
        "ask_size" : {
          "type" : "number"
        },
        "volume" : {
          "type" : "number"
        },
        "unrealized" : {
          "type" : "number"
        },
        "realized" : {
          "type" : "number"
        },
        "currency" : {
          "type" : "string"
        },
        "total_volume" : {
          "type" : "number"
        },
        "limits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/securities_limits"
          }
        },
        "interest_rate" : {
          "type" : "number"
        },
        "is_tradeable" : {
          "type" : "boolean"
        },
        "is_shortable" : {
          "type" : "boolean"
        },
        "start_period" : {
          "type" : "integer"
        },
        "stop_period" : {
          "type" : "integer"
        }
      }
    },
    "inline_response_200_6" : {
      "properties" : {
        "bid" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Order"
          }
        },
        "ask" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Order"
          }
        }
      },
      "example" : {
        "ask" : [ {
          "trader_id" : "trader49",
          "period" : 1,
          "ticker" : "CRZY",
          "quantity" : 100.0,
          "price" : 14.21,
          "vwap" : 14.21,
          "action" : "BUY",
          "tick" : 10,
          "type" : "LIMIT",
          "order_id" : 1221,
          "quantity_filled" : 10.0,
          "status" : "OPEN"
        }, {
          "trader_id" : "trader49",
          "period" : 1,
          "ticker" : "CRZY",
          "quantity" : 100.0,
          "price" : 14.21,
          "vwap" : 14.21,
          "action" : "BUY",
          "tick" : 10,
          "type" : "LIMIT",
          "order_id" : 1221,
          "quantity_filled" : 10.0,
          "status" : "OPEN"
        } ],
        "bid" : [ {
          "trader_id" : "trader49",
          "period" : 1,
          "ticker" : "CRZY",
          "quantity" : 100.0,
          "price" : 14.21,
          "vwap" : 14.21,
          "action" : "BUY",
          "tick" : 10,
          "type" : "LIMIT",
          "order_id" : 1221,
          "quantity_filled" : 10.0,
          "status" : "OPEN"
        }, {
          "trader_id" : "trader49",
          "period" : 1,
          "ticker" : "CRZY",
          "quantity" : 100.0,
          "price" : 14.21,
          "vwap" : 14.21,
          "action" : "BUY",
          "tick" : 10,
          "type" : "LIMIT",
          "order_id" : 1221,
          "quantity_filled" : 10.0,
          "status" : "OPEN"
        } ]
      }
    },
    "inline_response_200_7" : {
      "properties" : {
        "tick" : {
          "type" : "integer"
        },
        "open" : {
          "type" : "number"
        },
        "high" : {
          "type" : "number"
        },
        "low" : {
          "type" : "number"
        },
        "close" : {
          "type" : "number"
        }
      },
      "example" : "{\"tick\":11,\"open\":4.12,\"high\":4.21,\"low\":4.1,\"close\":4.15}"
    },
    "inline_response_429" : {
      "properties" : {
        "Error" : {
          "$ref" : "#/definitions/Error"
        }
      },
      "example" : "{code=RATE_LIMIT_EXCEEDED, wait=0.215}"
    },
    "inline_response_200_8" : {
      "properties" : {
        "tender_id" : {
          "type" : "integer"
        },
        "period" : {
          "type" : "integer"
        },
        "tick" : {
          "type" : "integer"
        },
        "expires" : {
          "type" : "integer"
        },
        "caption" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "number"
        },
        "action" : {
          "type" : "string",
          "enum" : [ "BUY", "SELL" ]
        },
        "is_fixed_bid" : {
          "type" : "boolean"
        },
        "price" : {
          "type" : "number",
          "description" : "Will be non-null if `is_fixed_bid` is `true`."
        }
      }
    },
    "inline_response_200_9" : {
      "properties" : {
        "cancelled_order_ids" : {
          "type" : "array",
          "example" : [ 12, 13, 91 ],
          "items" : {
            "type" : "integer"
          }
        }
      },
      "example" : {
        "cancelled_order_ids" : [ 12, 13, 91 ]
      }
    }
  },
  "responses" : {
    "RateLimitExceeded" : {
      "description" : "Rate limit exceeded.",
      "headers" : {
        "Retry-After" : {
          "type" : "number",
          "description" : "Number of seconds to wait before retrying request."
        }
      },
      "schema" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Error"
        }, { } ],
        "example" : {
          "code" : "RATE_LIMIT_EXCEEDED",
          "wait" : 0.215
        }
      }
    },
    "Unauthorized" : {
      "description" : "Unauthorized.",
      "schema" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Error"
        }, { } ],
        "example" : {
          "code" : "UNAUTHORIZED"
        }
      }
    }
  }
}